type Entry {
  id: ID!
  user: User!
  date: String!
  timezone: String!
  content: String
  wordCount: Int
  createdAt: DateTime
  updatedAt: DateTime
  activityLogs: [ActivityLog]
}

input ActivityInput {
  lowestWordCount: Int
  start: DateTime
}

input DateSpanInput {
  fromDate: DateTime!
  toDate: DateTime
}

type Query {
  findToday: Entry
  findEntryById(id: ID!): Entry
  findEntryByDate(date: String!): Entry
  findEntriesByDates(dateSpan: DateSpanInput!): [Entry]
  findAllEntries: [Entry]
}

type Mutation {
  findOrCreateEntry: Entry
  updateEntry(id: ID!, content: String, wordCount: Int, activity: ActivityInput): Entry
}
