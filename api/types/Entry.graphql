type Entry {
  id: ID!
  user: User!
  date: String!
  timezone: String!
  dayStartsAt: String
  createdAt: DateTime
  updatedAt: DateTime
  activityLogs: [ActivityLog]
  tags: [Tag]
}

input DateSpanInput {
  fromDate: DateTime!
  toDate: DateTime
}

type Query {
  findEntryById(id: ID!): Entry
  findEntryByDate(date: String!): Entry
  # findEntriesByMonth(year: Int!, month: Int!): [Entry]
  # findEntriesByYear(year: Int!): [Entry]
  findEntriesByDates(dateSpan: DateSpanInput!): [Entry]
  findAllEntries: [Entry]
  # searchEntriesByContent(searchInput: String!): [Entry]
}

type Mutation {
  createEntry(date: String!, timezone: String!, content: String!, wordCount: Int!, createdAt: DateTime!): Entry
  updateEntry(id: ID!, content: String!, wordCount: Int!, createdAt: DateTime!): Entry
  createOrUpdateEntry(date: String!, timezone: String!, content: String!, wordCount: Int!, createdAt: DateTime!): Entry
}
